C51 COMPILER V9.57.0.0   OLED                                                              01/07/2021 18:03:35 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE OLED.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\DMP) DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\OLED.lst) TABS(2) OBJECT(.\Objects\OLED.obj)

line level    source

   1          #include "OLED.h"
   2          #include "oledfont.h"
   3          
   4          
   5          //向SSD1306写入一个字节。
   6          //dat:要写入的数据/命令
   7          //cmd:数据/命令标志 0,表示命令;1,表示数据;
   8          void OLED_WR_Byte(u8 dat,u8 cmd)
   9          { 
  10   1        u8 i;       
  11   1        if(cmd)
  12   1          OLED_DC_Set();
  13   1        else 
  14   1          OLED_DC_Clr();      
  15   1        OLED_CS_Clr();
  16   1        for(i=0;i<8;i++)
  17   1        {       
  18   2          OLED_SCLK_Clr();
  19   2          if(dat&0x80)
  20   2            {
  21   3             OLED_SDIN_Set();
  22   3            }
  23   2          else
  24   2            OLED_SDIN_Clr();
  25   2            OLED_SCLK_Set();
  26   2          dat<<=1;   
  27   2        }             
  28   1        OLED_CS_Set();
  29   1        OLED_DC_Set();      
  30   1      } 
  31          
  32          void OLED_Set_Pos(u8 x, u8 y) 
  33          { 
  34   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
  35   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  36   1        OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
  37   1      }   
  38          
  39          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!  
  40          void OLED_Clear(void)  
  41          {  
  42   1        u8 i,n;       
  43   1        for(i=0;i<8;i++)  
  44   1        {  
  45   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  46   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  47   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  48   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  49   2        } //更新显示
  50   1      }
  51          
  52          //m^n函数
  53          u32 oled_pow(u8 m,u8 n)
  54          {
C51 COMPILER V9.57.0.0   OLED                                                              01/07/2021 18:03:35 PAGE 2   

  55   1        u32 result=1;  
  56   1        while(n--)result*=m;    
  57   1        return result;
  58   1      }
  59          
  60          //显示2个数字
  61          //x,y :起点坐标  
  62          //len :数字的位数
  63          //size:字体大小
  64          //mode:模式 0,填充模式;1,叠加模式
  65          //num:数值(0~4294967295);
  66          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
  67          {           
  68   1        u8 t,temp;
  69   1        u8 enshow=0;               
  70   1        for(t=0;t<len;t++)
  71   1        {
  72   2          temp=(num/oled_pow(10,len-t-1))%10;
  73   2          if(enshow==0&&t<(len-1))
  74   2          {
  75   3            if(temp==0)
  76   3            {
  77   4              OLED_ShowChar(x+(size2/2)*t,y,' ');
  78   4              continue;
  79   4            }else enshow=1; 
  80   3             
  81   3          }
  82   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
  83   2        }
  84   1      } 
  85          
  86          //在指定位置显示一个字符,包括部分字符
  87          //x:0~127
  88          //y:0~63
  89          //mode:0,反白显示;1,正常显示         
  90          //size:选择字体 16/12 
  91          void OLED_ShowChar(u8 x,u8 y,u8 chr)
  92          {       
  93   1        u8 c=0,i=0; 
  94   1          c=chr-' ';//得到偏移后的值      
  95   1          if(x>Max_Column-1){x=0;y=y+2;}
  96   1          if(SIZE ==16)
  97   1            {
  98   2              OLED_Set_Pos(x,y);  
  99   2              for(i=0;i<8;i++)
 100   2              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 101   2              OLED_Set_Pos(x,y+1);
 102   2              for(i=0;i<8;i++)
 103   2              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 104   2            }
 105   1          else 
 106   1            { 
 107   2              OLED_Set_Pos(x,y+1);
 108   2              for(i=0;i<6;i++)
 109   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 110   2            }
 111   1      }
 112          
 113          //显示一个字符号串
 114          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 115          {
 116   1        u8 j=0;
C51 COMPILER V9.57.0.0   OLED                                                              01/07/2021 18:03:35 PAGE 3   

 117   1        while (chr[j]!='\0')
 118   1        {   
 119   2          OLED_ShowChar(x,y,chr[j]);
 120   2          x+=8;
 121   2          if(x>120){x=0;y+=2;}
 122   2          j++;
 123   2        }
 124   1      }
 125          
 126          //初始化SSD1306             
 127          void OLED_Init(void)
 128          {
 129   1        OLED_RST_Set();
 130   1        delay_ms(100);
 131   1        OLED_RST_Clr();
 132   1        delay_ms(100);
 133   1        OLED_RST_Set(); 
 134   1      
 135   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 136   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 137   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 138   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 139   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 140   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 141   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 142   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 143   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 144   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 145   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 146   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 147   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 148   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 149   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 150   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 151   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 152   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 153   1        OLED_WR_Byte(0x12,OLED_CMD);
 154   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 155   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 156   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 157   1        OLED_WR_Byte(0x02,OLED_CMD);//
 158   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 159   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 160   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 161   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 162   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 163   1        
 164   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 165   1        OLED_Clear();
 166   1        OLED_Set_Pos(0,0); 
 167   1      
 168   1        timer1_init();
 169   1      }  
 170          
 171          
 172          void timer1_init(void)
 173          {
 174   1        TMOD = 0x00;
 175   1        TL1 = 0xcb;//计数初值=65536-24Mhz/12分频/(60)hz=32203
 176   1        TH1 = 0x7d;
 177   1        TR1 = 1;//启动定时器1
 178   1        ET1 = 1;//使能定时器中断
C51 COMPILER V9.57.0.0   OLED                                                              01/07/2021 18:03:35 PAGE 4   

 179   1        EA = 1;
 180   1      }
 181          
 182          
 183          void TM1_Isr() interrupt 3
 184          {
 185   1        OLED_ShowNum(10,0,number[0],4,16);
 186   1        OLED_ShowNum(10,2,number[1],4,16);
 187   1      }
 188          
 189          
 190          
 191          
 192          
 193          
 194          
 195          
*** WARNING C294 IN LINE 107 OF OLED.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    883    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
